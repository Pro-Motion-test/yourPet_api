{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Your pet API"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://your-pet-api.onrender.com/api/v1" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Notice",
      "description": "Notice's endpoints"
    },
    {
      "name": "Pet",
      "description": "Pet's endpoints"
    },
    {
      "name": "News",
      "description": "News endpoints"
    },
    {
      "name": "Friend",
      "description": "Endpoints about friends"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed! Bad request, invalid value",
            "content": {}
          },
          "409": {
            "description": "Failed! Conflict, the email still exist!",
            "content": {}
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Login is successfully completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed! Bad request, invalid value",
            "content": {}
          },
          "401": {
            "description": "Failed! Invalid email or password",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "string",
            "name": "access token",
            "required": true,
            "description": "The user access token for logout"
          }
        ],
        "responses": {
          "201": {
            "description": "Logout is successfully completed'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "string",
            "name": "access token",
            "required": true,
            "description": "The user token for getting user params"
          }
        ],
        "responses": {
          "200": {
            "description": "Current user successfully found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/update": {
      "put": {
        "tags": ["Auth"],
        "summary": "Update user's params",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "string",
            "name": "access token",
            "required": true,
            "description": "The user access token for udate user params"
          }
        ],
        "requestBody": {
          "description": "Update object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed! Bad request, invalid value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Get new access and refresh tokens for current user",
        "requestBody": {
          "description": "Refresh user tokens",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New access and refresh tokens generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed! Bad request, invalid value",
            "content": {}
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify current user's email",

        "parameters": [
          {
            "in": "number",
            "name": "code",
            "required": true,
            "description": "The confirmation code that will be sent to the user's email address"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully confirmed the user's email address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/verifyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed! Bad request, invalid value",
            "content": {}
          }
        }
      }
    },
    "/notices": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get all notices by category",
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "description": "Notices's category"
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search by title"
          },
          {
            "in": "query",
            "name": "gender",
            "description": "Filtering by sex"
          },
          {
            "in": "query",
            "name": "fromTheDate",
            "description": "From what date to filter"
          },
          {
            "in": "query",
            "name": "toTheDate",
            "description": "Until what date to filter"
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllNoticesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Notice"],
        "summary": "Create notice",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Notice's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateNoticeRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {}
          }
        }
      }
    },
    "/notices/own": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get my notices",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "description": "Search by title"
          },
          {
            "in": "query",
            "name": "gender",
            "description": "Filtering by sex"
          },
          {
            "in": "query",
            "name": "fromTheDate",
            "description": "From what date to filter"
          },
          {
            "in": "query",
            "name": "toTheDate",
            "description": "Until what date to filter"
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMyNoticesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/favorite": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get favorite notices",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "description": "Search by title"
          },
          {
            "in": "query",
            "name": "gender",
            "description": "Filtering by sex"
          },
          {
            "in": "query",
            "name": "fromTheDate",
            "description": "From what date to filter"
          },
          {
            "in": "query",
            "name": "toTheDate",
            "description": "Until what date to filter"
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFavouriteNoticesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notices/:id": {
      "get": {
        "tags": ["Notice"],
        "summary": "Get one notice by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Notice's id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOneNoticeResponse"
                }
              }
            }
          },
          "404": {
            "description": "Cannot find notice with this id",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Notice"],
        "summary": "Delete notice by id",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Notice's id"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted",
            "content": {}
          },
          "403": {
            "description": "You cannot delete this notice, because it's not yours!",
            "content": {}
          },
          "404": {
            "description": "Cannot find notice with this id",
            "content": {}
          }
        }
      }
    },
    "/notices/:id/favorite": {
      "patch": {
        "tags": ["Notice"],
        "summary": "Select to favorites or delete",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Notice's id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {}
          },
          "404": {
            "description": "Cannot find notice with this id",
            "content": {}
          }
        }
      }
    },
    "/pets": {
      "get": {
        "tags": ["Pet"],
        "summary": "Get all pets",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPetsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Pet"],
        "summary": "Create pet",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Pet's object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created pet",
            "content": {}
          },
          "400": {
            "description": "BAD_REQUEST",
            "content": {}
          }
        }
      }
    },
    "/pets/:id": {
      "delete": {
        "tags": ["Pet"],
        "summary": "Delete pet by id",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Pet's id"
          }
        ],
        "responses": {
          "204": {
            "description": "Pet deleted successfully",
            "content": {}
          },
          "404": {
            "description": "Cannot find pet with this id",
            "content": {}
          }
        }
      }
    },
    "/friends": {
      "get": {
        "tags": ["Friend"],
        "summary": "get all friends",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FriendsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": ["News"],
        "summary": "Get all news",
        "parameters": [
          {
            "in": "query",
            "name": "search",
            "description": "Search by title"
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page"
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllNewsResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678aZ"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "avatarURL": {
              "type": "string"
            },
            "newUser": {
              "type": "boolean"
            },
            "accessToken": {
              "type": "string"
            },
            "refreshToken": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "birthday": {
              "type": "string",
              "format": "date"
            },
            "phone": {
              "type": "string"
            },
            "city": {
              "type": "string"
            }
          }
        },
        "example": {
          "email": "user@example.com",
          "accessToken": "string",
          "refreshToken": "string",
          "avatarURL": null,
          "newUser": true,
          "birthday": null,
          "phone": "string",
          "city": "string"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "12345678aZ"
          }
        }
      },
      "LoginResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "avatarURL": {
              "type": "string"
            },
            "accessToken": {
              "type": "string"
            },
            "refreshToken": {
              "type": "string"
            },
            "newUser": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "format": "date"
            },
            "phone": {
              "type": "string"
            },
            "city": {
              "type": "string"
            }
          }
        },
        "example": {
          "email": "user@example.com",
          "accessToken": "string",
          "refreshToken": "string",
          "avatarURL": null,
          "newUser": false,
          "birthday": null,
          "phone": "+############",
          "city": "string"
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "32143232436545474"
          }
        },
        "example": { "userId": "1", "email": "user@example.com" }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "32143232436545474"
          },
          "accessToken": "token...",
          "refreshToken": "token...",
          "name": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "phone": {
            "type": "string"
          },
          "city": {
            "type": "string"
          }
        },
        "example": {
          "userId": "1",
          "email": "user@example.com",
          "accessToken": "string",
          "refreshToken": "string",
          "avatarURL": null,
          "date": null,
          "name": "string",
          "phone": "string",
          "city": "string"
        }
      },
      "UpdateRequest": {
        "type": "object",
        "required": ["email", "birthday"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "file": {
            "type": "file"
          },
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "32143232436545474"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "phone": {
            "type": "string"
          },
          "city": {
            "type": "string"
          }
        },
        "example": {
          "userId": "1",
          "email": "user@example.com",
          "accessToken": "string",
          "refreshToken": "string",
          "file": null,
          "date": null,
          "name": "string",
          "phone": "string",
          "city": "string"
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "avatarURL": {
            "type": "string"
          },
          "userId": {
            "type": "string",
            "description": "User's id",
            "example": "32143232436545474"
          },
          "name": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "phone": {
            "type": "string"
          },
          "city": {
            "type": "string"
          }
        },
        "example": {
          "userId": "1",
          "email": "user@example.com",
          "accessToken": "string",
          "refreshToken": "string",
          "avatarURL": null,
          "date": null,
          "name": "string",
          "phone": "string",
          "city": "string"
        }
      },
      "RefreshRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "User's refresh token"
          }
        },
        "example": { "refreshToken": "old user  refresh token..." }
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "User's access token"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refresh token"
          }
        },
        "example": { "accessToken": "token...", "refreshToken": "token..." }
      },
      "GetAllNoticesResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "sex": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date"
                },
                "imgUrl": {
                  "type": "string"
                },
                "isOwner": {
                  "type": "boolean"
                },
                "isFavourite": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "GetOneNoticeResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "breed": {
            "type": "string"
          },
          "sex": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "imgUrl": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "comments": {
            "type": "string"
          },
          "isOwner": {
            "type": "boolean"
          },
          "isFavourite": {
            "type": "boolean"
          },
          "user": {
            "type": "object",
            "description": "User contacts info",
            "properties": {
              "email": { "type": "string", "format": "email" },
              "phone": { "type": "string" }
            }
          }
        }
      },
      "CreateNoticeRequest": {
        "type": "object",
        "required": [
          "title",
          "name",
          "category",
          "breed",
          "sex",
          "location",
          "date",
          "file"
        ],
        "properties": {
          "title": {
            "type": "string",
            "required": true
          },
          "name": {
            "type": "string",
            "required": true
          },
          "category": {
            "type": "string",
            "required": true
          },
          "breed": {
            "type": "string",
            "required": true
          },
          "sex": {
            "type": "string",
            "required": true
          },
          "location": {
            "type": "string",
            "required": true
          },
          "date": {
            "type": "string",
            "required": true,
            "format": "date"
          },
          "file": {
            "type": "file",
            "required": true
          },
          "price": {
            "type": "number"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "GetMyNoticesResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "sex": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date"
                },
                "imgUrl": {
                  "type": "string"
                },
                "isFavourite": {
                  "type": "boolean"
                },
                "isOwner": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "GetFavouriteNoticesResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "category": {
                  "type": "string"
                },
                "sex": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date"
                },
                "imgUrl": {
                  "type": "string"
                },
                "isOwner": {
                  "type": "boolean"
                },
                "isFavourite": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "GetAllPetsResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date"
                },
                "breed": {
                  "type": "string"
                },
                "avatarURL": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "CreatePetRequest": {
        "type": "object",
        "required": ["name", "breed", "date", "file"],
        "properties": {
          "name": {
            "type": "string",
            "required": true
          },
          "date": {
            "type": "string",
            "required": true,
            "format": "date"
          },
          "breed": {
            "type": "string",
            "required": true
          },
          "file": {
            "type": "file",
            "required": true
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "FriendsResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "addressUrl": {
              "type": "string"
            },
            "imageUrl": {
              "type": "string"
            },
            "address": {
              "type": "string"
            },
            "workDays": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isOpen": { "type": "boolean" },
                  "from": { "type": "string" },
                  "to": { "type": "string" }
                }
              }
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          }
        }
      },
      "GetAllNewsResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "imgUrl": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "text": {
                  "type": "string"
                },
                "date": {
                  "type": "string",
                  "format": "date"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },

    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
